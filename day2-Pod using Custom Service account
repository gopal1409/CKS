overview
  secnarion with sa and pods
  limit service account permission with RBAC

  service account are namespaces
  sa default in every namespaces used by pods
  can be used to talk to k8s api
  secret-k8s token
  ####create service account token to connect to the APis from inside a pOd
  ##lets check the service account
  kubectl get sa
  ###it will show you the default namesapce 
  ##lets create a new service account called accessor
    141  kubectl create sa accessor
  142  kubectl get sa
##how any one can use the service account to authenticate with k8s we will create atoken
   kubectl create token accessor
###this is a temp token 
  go to jwt.io and paste the token
  ##this will show the token is for 
  "sub": "system:serviceaccount:default:accessor"
}
##program accessing the pod will have access to this token
  ###lets create a pod and test oit
  kubectl run accessor --image=nginx -oyaml --dry-run=client > pod.yml
  #####open the pod defination 
  vi pod.yml
#######
apiVersion: v1
kind: Pod
metadata:
  creationTimestamp: null
  labels:
    run: accessor
  name: accessor
spec:
  serviceAccountName: test ###add the service account and put a different name 
  containers:
  - image: nginx
    name: accessor
    resources: {}
  dnsPolicy: ClusterFirst
  restartPolicy: Always
status: {}
##if you try to apply it 
  root@k8smaster:~# kubectl apply -f pod.yml
Error from server (Forbidden): error when creating "pod.yml": pods "accessor" is forbidden: error looking up service account default/test: serviceaccount "test" not found
#####as the service account do not exist
  ####we will put the wright one 
 vi pod.yml
#######
apiVersion: v1
kind: Pod
metadata:
  creationTimestamp: null
  labels:
    run: accessor
  name: accessor
spec:
  serviceAccountName: accessor #put the wright sa one we create earlier
  containers:
  - image: nginx
    name: accessor
    resources: {}
  dnsPolicy: ClusterFirst
  restartPolicy: Always
status: {}
###
  root@k8smaster:~# vi pod.yml
root@k8smaster:~# kubectl apply -f pod.yml
pod/accessor created
##3no error and the pod is running we will go inside the pod 
###  where we can find the service account
   kubectl exec -it accessor -- bash
  ##by default k8s mount this in directroy
   mount | grep ser
  cd /run/secrets/kubernetes.io/serviceaccount
 cat namespace
cat token
###copy the token and paste it in jwt
  sub": "system:serviceaccount:default:accessor
